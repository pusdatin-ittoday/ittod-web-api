generator client {
  provider = "prisma-client-js"
  output   = "app/generated/prisma/client"

}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  username                 String          @id @db.VarChar(36)
  email                    String          @unique(map: "unique_email", length: 255) @db.Text
  full_name                String?         @db.Text
  birth_date               DateTime?       @db.Date
  education                user_education?
  entry_source             String?         @db.Text
  instance                 String?         @db.Text
  phone_number             String?         @db.Text
  id_line                  String?         @db.Text
  id_discord               String?         @db.Text
  id_instagram             String?         @db.Text
  consent                  Boolean         @default(false)
  is_registration_complete Boolean         @default(false)
  created_at               DateTime?       @default(dbgenerated("(now())")) @db.Timestamp(0)
  updated_at               DateTime?       @default(dbgenerated("(now())")) @db.Timestamp(0)
  user_identity            user_identity?
}

model user_identity {
  username                           String                 @id @db.VarChar(36)
  external_id                        String                 @unique(map: "unique_external_id", length: 255) @db.Text
  email                              String                 @unique(map: "unique_email", length: 255) @db.Text
  provider                           user_identity_provider
  hash                               String                 @unique(map: "unique_hash", length: 255) @db.Text
  is_verified                        Boolean                @default(false)
  verification_token                 String?                @db.Text
  verification_token_expiration      DateTime?              @db.Timestamp(0)
  password_recovery_token            String?                @db.Text
  password_recovery_token_expiration DateTime?              @db.Timestamp(0)
  refresh_token                      String?                @db.Text
  role                               user_identity_role     @default(user)
  created_at                         DateTime?              @default(dbgenerated("(now())")) @db.Timestamp(0)
  updated_at                         DateTime?              @default(dbgenerated("(now())")) @db.Timestamp(0)
  user                               user                   @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction, map: "user_identity_ibfk_1")
}

enum user_identity_provider {
  email
  google
  github
}

enum user_education {
  SMA
  D3
  S1
  S2
  S3
  Lainnya
}

enum user_identity_role {
  user
  admin
  superadmin
}
